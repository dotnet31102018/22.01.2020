{"version":3,"sources":["pokeball.png","components/Navbar.js","components/Home.js","components/Contacts.js","components/About.js","hoc/Rainbow.js","components/Post.js","actions/deletePost.js","App.js","reducers/rootReducer.js","index.js"],"names":["module","exports","withRouter","props","console","log","history","className","to","Home","this","posts","postList","length","map","post","key","id","src","Pokeball","alt","title","body","Component","connect","state","Contact","setTimeout","push","Rainbow","WrappedComponent","Math","floor","random","Post","handleClick","deletePost","onClick","ownProps","match","params","post_id","find","p","dispatch","type","App","exact","path","component","About","initState","firstInit","rootReducer","action","new_posts","filter","data","postStore","createStore","fetch","then","response","json","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.aa823284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.f10bf078.png\";","import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nconst Navbar = (props) => {\r\n  console.log(props.history)\r\n  /*\r\n  setTimeout( () => { \r\n    props.history.push('/') }, 2000); \r\n    */\r\n  return (\r\n    <nav className=\"nav-wrapper red darken-3\">\r\n      <div className=\"container\">\r\n        <a className=\"brand-logo center\">Poke' Times</a>\r\n        <ul className=\"right\">\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/about\">About</NavLink></li>\r\n          <li><NavLink to=\"/contact\">Contact</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default withRouter(Navbar)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Pokeball from './../pokeball.png'\r\nimport { connect } from 'react-redux';\r\n// connects is a fucn which return HOC \r\n\r\nclass Home extends Component {\r\n  /*\r\n  // first way\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(json => this.props.addPosts(json))\r\n  }\r\n  */\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    console.log(this.props)\r\n    const { posts } = this.props\r\n    const postList = posts.length ? (\r\n      posts.map(post => {\r\n        return (\r\n          <div className=\"post card2\" key={post.id}>\r\n            <img src={Pokeball} alt=\"a pokeball\" />\r\n            <div className=\"card-content\">\r\n              <Link to={'/posts/' + post.id}>\r\n                <span className=\"card-title red-text\">{post.title}</span>\r\n              </Link>\r\n              <p>{post.body}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    ) : (\r\n        <div className=\"center\">No posts to show</div>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <h4 className=\"center\">Home</h4>\r\n          {postList}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n// first way\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPosts: (new_posts) => {\r\n      dispatch({\r\n        type: 'AJAX_POSTS',\r\n        data: new_posts\r\n      })\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nconst mapStateToProps = (state) => {\r\n  // this will take data from the state\r\n  // and put it into the component props\r\n  return {\r\n    // will create props.posts on the component\r\n    // from the state.posts\r\n    posts: state.posts\r\n  }\r\n}\r\n\r\n// first way\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Home)\r\nexport default connect(mapStateToProps)(Home)","import React from 'react'\r\nconst Contact = (props) => {\r\n  console.log(props)\r\n  setTimeout(() => {\r\n    props.history.push('/about')\r\n  }, 2000);\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">Contact</h4>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Contact\t","import React from 'react'\r\nimport Rainbow from './../hoc/Rainbow';\r\nconst About = (props) => {\r\n  console.log(props)\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">About</h4>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Rainbow(About)","import React from 'react'\r\nconst Rainbow = (WrappedComponent) => {\r\n  const colours = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\r\n  const randomColour = colours[Math.floor(Math.random() * 6)];\r\n  const className = randomColour + '-text';\r\n\r\n  return (props) => (\r\n    <div className={className}>\r\n      <WrappedComponent {...props} />\r\n    </div>\r\n  )\r\n}\r\nexport default Rainbow","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n// connects is a fucn which return HOC \r\n\r\nimport { deletePost } from './../actions/deletePost'\r\n\r\nclass Post extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.deletePost(this.props.post.id);\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    console.log(this.props) // show delete func\r\n    const post = this.props.post ? (\r\n      <div className=\"post\">\r\n        <h4 className=\"center\">{this.props.post.title}</h4>\r\n        <p>{this.props.post.body}</p>\r\n        <div className=\"center\">\r\n          <button className=\"btn gray\" onClick={this.handleClick}>\r\n            DELETE POST\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n        <div className=\"center\">Loading post...</div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {post}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // own props is the original props of the component\r\n  let id = ownProps.match.params.post_id // look in App.js route parameter\r\n\r\n  // this will take data from the state\r\n  // and put it into the component props\r\n  return {\r\n    // will create props.posts on the component\r\n    // from the state.posts\r\n    post: state.posts.find(p => p.id == id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePost: (id) => {\r\n      dispatch(deletePost(id))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)","export const deletePost = (id) => {\r\n  return {\r\n    type: 'DELETE_POST',\r\n    id: id\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Contact from './components/Contacts';\nimport About from './components/About';\nimport Post from './components/Post';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header className=\"App\">\n            <Navbar />\n            <Route exact path='/' component={Home} />\n            <Route path='/contact' component={Contact} />\n            <Route path='/about' component={About} />\n            <Route path='/posts/:post_id' component={Post} />\n          </header>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;","const initState = {\r\n  posts: [],\r\n  firstInit: true\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n  console.log(action) // show in console\r\n  // let's delete it from the state\r\n  if (action.type == 'DELETE_POST') {\r\n    let new_posts = state.posts.filter(p => p.id != action.id)\r\n    return {\r\n      ...state,\r\n      posts: new_posts\r\n    }\r\n  }\r\n  else if (action.type == 'AJAX_POSTS') {\r\n    console.log(action.data)\r\n    if (state.firstInit) {\r\n      state.firstInit = false\r\n      return {\r\n        ...state,\r\n        posts: action.data\r\n      }\r\n    }\r\n  }\r\n\r\n  return state;\r\n\r\n};\r\n\r\nexport default rootReducer  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n// the provider will wrap our App component\n// will provide our applciation with the store\nimport rootReducer from './reducers/rootReducer';\n\nconst postStore = createStore(rootReducer)\n\nfetch('https://jsonplaceholder.typicode.com/posts')\n  .then(response => response.json())\n  .then(json => postStore.dispatch({\n    type: 'AJAX_POSTS',\n    data: json\n  }))\n\nfetch('http://localhost:49813/api/values')\n  .then(response => response.json())\n  .then(json => console.log(json))\n\n// how do we associate how store with react? second package\nReactDOM.render(<Provider store={postStore}><App /></Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}